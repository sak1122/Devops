installing kubeadm
machine should be linux machine.
1)it should have requirement satisfaction instance t2 madium.
2)it should installed with container runtime eg- containerd,docker,cri-o
3)swapping off (swap area)
4)kubectl
5)kubeadm
6)kubelet	



docker installation
docker can install  ---just simply by get.docker com
docker installtion prette easy good

kubeadm init ---after successfull installation it gives commad to set up masternode and workernode.
--their is sha key that should be saved for further master and worker node configuration

install network-module  ---kubectl install wave network  ---kubectl commaly to manage the nodes 


worker node also need to install all thigs which in rather than kubeadm init

//for controll this node no needs to install all those too only tool like kubectl can manage all nodes
in configuration master admin.conf  copy to controlling user home  ./kube directory as file

now you can controll the nodes


//
kubeadm reset
--it will reset all the components

thier is 4 phases to reset
1)preflight
2)update-clustor-status
3)remove-etdc-member
4)cleanup node

you can skip any of the phase 
kubeadm reset --skip-phases


*kubernates clustor upgrade
we have to take backup before any types of backup into kubernates
/etc/kubernates/manifest
/var/lib/etcd
you can only update the minor version of the kubernates not the major
kubernates itself takes backup of all the files before backup

*kubernates tokens and certificates
way to do secure communication between master and worker nodes
kubeadm token list --to list the token if forget or know again 

working day-5
kubernates object  --its known as record of intent
kubernates object is persistant entities represents your kubernates clustor
--kubectl api-resourses

*to create pod we have specify it .yml specification file
 using master node -y we have to apply the specification
 command uses:
   kubectl apply .yml
   kubectl describe podname  //to get the info about the podsss
   it all connected with api server all these things    


deployement--
 deployment yaml for managing the pods -autoscaling and all
services--
 services used for extenal and network access communication 
 1)clustorip
 2)nodeport
 3)load-balancer 


load-balancer===> nodeport====>clustorip====>podip===>services


*kubernates namespaces,taints,labels
kubernates supports multiple virtual clustor backed with single physical server,this virtual server called as namespace
kubectl get namespaces  ---scenario like prod,dev,test team wann three infra at that time we create diffrent namespaces using namespaces we deffrential diffrent environments in give space or clustorsn
namespace creates more clarity in the kubernates clustor

-taints
taints used in node for applying restriction on the pods    
-labels
including grouping, selecting, and organizing resources.it  is used to group all resourses